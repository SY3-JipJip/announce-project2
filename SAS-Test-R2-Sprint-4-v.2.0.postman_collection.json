{
	"info": {
		"_postman_id": "2d67c7f1-cba9-4098-8652-08ba4fe3eafc",
		"name": "SAS-Test-R2-Sprint-4-v.2.0",
		"description": "v.1.0 initial Only PBI-29 and PBI 30 have done.\n\nv.2.0 Add Scripts PBI-30.1 and PBI-31",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7314284"
	},
	"item": [
		{
			"name": "PBI-29-AUTHORIZE-USER-FUNCTIONS",
			"item": [
				{
					"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1",
					"item": [
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : view the user listing page\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users rows must equal 4\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(4) ;",
											"})",
											"var data = jsonData[0] ",
											"pm.test(\"User keys must be [id,username, name, email, role, createdOn, updatedOn]\",()=>{",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('id','username','name','email','role','createdOn','updatedOn')",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First username must be 'sanit'\",()=>{",
											"    pm.expect(data.username).to.equal(\"sanit\") ;",
											"    pm.expect(data.name).to.contain(\"Sanit\") ;",
											"    pm.expect(data.name).to.contain(\"Sirisawatvatana\") ;",
											"    pm.expect(data.email).to.equal(\"sanit.sir@kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"admin\") ;",
											"})",
											"var data = jsonData[3] ;",
											"pm.test(\"Last username must be 'vichchuda'\",()=>{",
											"    pm.expect(data.username).to.equal(\"vichchuda\") ;",
											"    pm.expect(data.name).to.contain(\"Vichchuda\") ;",
											"    pm.expect(data.name).to.contain(\"Tedoloh\") ;",
											"    pm.expect(data.email).to.equal(\"vichchuda.ted@kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"announcer\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : view the user 'pornthip'\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"User row must be an object\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"object\") ;",
											"})",
											"var data = jsonData ;",
											"pm.test(\"User keys must be [id,username, name, email, role, createdOn, updatedOn]\",()=>{",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('id','username','name','email','role','createdOn','updatedOn')",
											"})",
											"var data = jsonData ;",
											"pm.test(\"The username must be 'pornthip'\",()=>{",
											"    pm.expect(data.username).to.equal(\"pornthip\") ;",
											"    pm.expect(data.name).to.contain(\"Pornthip\") ;",
											"    pm.expect(data.name).to.contain(\"Sirijutikul\") ;",
											"    pm.expect(data.email).to.equal(\"pornthip.sri@kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"announcer\") ;",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : add an user 'kanokwan.suw'\")",
											"pm.test(\"Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json() ;",
											"",
											"pm.collectionVariables.set(\"delete-id\", data.id) ;",
											"",
											"pm.test(\"Test : add an user 'kanokwan.suw'\",()=>{",
											"    pm.expect(data.username).to.equal(\"kanokwan.suw\") ;",
											"    pm.expect(data.name).to.contain(\"KANOKWAN\") ;",
											"    pm.expect(data.name).to.contain(\"SUWANTAVATOOP\") ;",
											"    pm.expect(data.email).to.equal(\"kanokwan@sit.kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"admin\") ;  ",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan.suw\",\n    \"name\" : \"KANOKWAN SUWANTAVATOOP\",\n    \"email\" : \"kanokwan@sit.kmutt.ac.th\",\n    \"password\": \"Sasinter22*\",\n    \"role\" : \" admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : update an user 'kanokwan.suw'\")",
											"pm.test(\"Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json() ;",
											"",
											"pm.test(\"Test : update an user 'kanokwan.suw'\",()=>{",
											"    pm.expect(data.username).to.equal(\"kanokwan\") ;",
											"    pm.expect(data.name).to.contain(\"Kanokwan\") ;",
											"    pm.expect(data.name).to.contain(\"Suwantavatoop\") ;",
											"    pm.expect(data.email).to.equal(\"kanokwan.suw@kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"announcer\") ;  ",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan\",\n    \"name\" : \"Kanokwan Suwantavatoop\",\n    \"email\" : \"kanokwan.suw@kmutt.ac.th\",\n    \"role\" : \" announcer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : match password\")",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sanit\",\n    \"password\" : \"Sasadmin22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users/match",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"match"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.collectionVariables.get(\"delete-id\")",
											"pm.test(\"Senario : Delete user : kanokwan\")",
											"pm.test(\"Delete the username 'kanokwan' with id : \"+id,function(){",
											"})",
											"",
											"pm.test(\"Delete id \"+id+\" : Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var host = pm.collectionVariables.get(\"host\")",
									"",
									"/* authentication with username and password */",
									"pm.sendRequest({",
									"    url: host+'/api/token',",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({username: \"sanit\", password: \"Sasadmin22*\"})",
									"    }",
									"},function(err,res){",
									"    pm.collectionVariables.set(\"token\",res.json().token) ;",
									"    pm.collectionVariables.set(\"refreshToken\",res.json().refreshToken) ;",
									"})",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-3",
					"item": [
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role : view the user listing page\")",
											"pm.test(\"Status must be 403\",function(){",
											"    pm.response.to.have.status(403)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role :view the user 'pornthip\")",
											"pm.test(\"Status must be 403\",function(){",
											"    pm.response.to.have.status(403) ",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role : add an user 'kanokwan.suw'\")",
											"pm.test(\"Status must be 403\",function(){",
											"    pm.response.to.have.status(403) ",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan.suw\",\n    \"name\" : \"KANOKWAN SUWANTAVATOOP\",\n    \"email\" : \"kanokwan@sit.kmutt.ac.th\",\n    \"psssword\": \"Sasinter22*\",\n    \"role\" : \" admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role : update an user 'vichchuda'\")",
											"pm.test(\"Status must be 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"vichchuda.ted\",\n    \"name\" : \"Miss.Vichchuda Tedoloh\",\n    \"email\" : \"vichchuda@kmutt.ac.th\",\n    \"role\" : \"announcer\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role : match password\")",
											"pm.test(\"Status must be 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan\",\n    \"password\" : \"Sasinter22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users/match",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"match"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-29-AUTHORIZE-USER-FUNCTIONS-1-6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role : delete the user id 5\")",
											"pm.test(\"Status must be 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/5",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"5"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var host = pm.collectionVariables.get(\"host\")",
									"",
									"/* authentication with username and password */",
									"pm.sendRequest({",
									"    url: host+'/api/token',",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({username: \"pornthip\", password: \"Sasbscit22*\"})",
									"    }",
									"},function(err,res){",
									"    pm.collectionVariables.set(\"token\",res.json().token) ;",
									"    pm.collectionVariables.set(\"refreshToken\",res.json().refreshToken) ;",
									"})",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS",
			"item": [
				{
					"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1",
					"item": [
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : view the announcement listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Announcements length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(4) ;",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"กิจกรรมพี่อ้อย พี่ฉอด On Tour 2566\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-04-18T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-05-08T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"var data = jsonData[1] ;",
											"pm.test(\"Second Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"แนวปฎิบัติการสอบออนไลน์ พ.ศ. 2565\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-01-26T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.be.null ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"var data = jsonData[2] ;",
											"pm.test(\"Third Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"รายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" 2/2565\") ;",
											"    pm.expect(data.publishDate).to.be.null ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-05-31T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"vichchuda\") ;",
											"})",
											"var data = jsonData[3] ;",
											"pm.test(\"Four Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"บริษัท เน็ตเซอร์พลัส จำกัด รับสมัครงาน 2 ตำแหน่ง\") ;",
											"    pm.expect(data.publishDate).to.be.null ;",
											"    pm.expect(data.closeDate).to.be.null ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"N\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"หางาน\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"jaruwan_w\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : view the annoucement id 2\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsondata = pm.response.json() ;",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"รายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" 2/2565\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"คณะ ฯ ประกาศรายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" ประจำภาคการศึกษา 2/2565\") ;",
											"    pm.expect(jsondata.publishDate).to.be.null ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-05-31T11:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"vichchuda\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : update the annoucement id 2\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsondata = pm.response.json() ;",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"รายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" 2/2565\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"คณะ ฯ ประกาศรายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" ประจำภาคการศึกษา 2/2565\") ;",
											"    pm.expect(jsondata.publishDate).to.be.null ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-12-31T11:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"vichchuda\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"announcementTitle\": \"รายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" 2/2565\",\n        \"announcementDescription\": \"คณะ ฯ ประกาศรายชื่อนักศึกษาที่ได้รับทุนการศึกษาประเภท \\\"ทุนจ้างงาน\\\" ประจำภาคการศึกษา 2/2565\",\n        \"publishDate\": null,\n        \"closeDate\": \"2023-12-31T11:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1-4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - admin role : add a new announcment\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"const jsondata = pm.response.json() ;",
											"pm.collectionVariables.set(\"delete-id\", jsondata.id) ;",
											"",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\"\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\") ;",
											"    pm.expect(jsondata.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-10-31T06:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"sanit\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"announcementTitle\": \"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\"\",\n        \"announcementDescription\": \"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\",\n        \"publishDate\": \"2023-10-22T01:00:00Z\",\n        \"closeDate\": \"2023-10-31T06:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-1-6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.collectionVariables.get(\"delete-id\")",
											"pm.test(\"Senario : Delete the announcement with id : \"+id,function(){",
											"})",
											"",
											"pm.test(\"Delete id \"+id+\" : Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var host = pm.collectionVariables.get(\"host\")",
									"",
									"/* authentication with username and password */",
									"pm.sendRequest({",
									"    url: host+'/api/token',",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({username: \"sanit\", password: \"Sasadmin22*\"})",
									"    }",
									"},function(err,res){",
									"    pm.collectionVariables.set(\"token\",res.json().token) ;",
									"    pm.collectionVariables.set(\"refreshToken\",res.json().refreshToken) ;",
									"})",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2",
					"item": [
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - guest/viewer role : view the announcement listing page with active status\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements?mode=active",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									],
									"query": [
										{
											"key": "mode",
											"value": "active"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - guest/viewer role : view the announcement listing page with close status\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements?mode=close",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									],
									"query": [
										{
											"key": "mode",
											"value": "close"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - guest/viewer role : view the detail of announcement id 3\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2-4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - guest/viewer role : update the announcement id 3\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"announcementTitle\": \"แนวปฎิบัติการสอบออนไลน์ พ.ศ. 2565 (เพิ่มเติม)\",\n    \"announcementDescription\": \"ประกาศมหาวิทยาลัยเทคโนโลยีพระจอมเกล้าธนบุรี เรื่องแนวทางปฎิบัติการสอบออนไลน์ พ.ศ. 2565\",\n    \"publishDate\": \"2023-12-26T23:00:00Z\",\n    \"closeDate\": null,\n    \"announcementDisplay\": \"Y\",\n    \"categoryId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC-PBI-30-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-2-5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - guest/viewer role : delete the announcement id 3\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(401);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER",
			"item": [
				{
					"name": "TC-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1",
					"item": [
						{
							"name": "TC-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - announcer role/owner : view the announcement listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Announcements length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(2) ;",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"กิจกรรมพี่อ้อย พี่ฉอด On Tour 2566\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-04-18T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-05-08T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"var data = jsonData[1] ;",
											"pm.test(\"Second Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"แนวปฎิบัติการสอบออนไลน์ พ.ศ. 2565\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-01-26T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.be.null ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - announcer role/owner : view the annoucement id 3\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsondata = pm.response.json() ;",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"แนวปฎิบัติการสอบออนไลน์ พ.ศ. 2565\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"ประกาศมหาวิทยาลัยเทคโนโลยีพระจอมเกล้าธนบุรี เรื่องแนวทางปฎิบัติการสอบออนไลน์ พ.ศ. 2565\") ;",
											"    pm.expect(jsondata.publishDate).to.equal('2023-01-26T23:00:00Z') ;",
											"    pm.expect(jsondata.closeDate).to.be.null ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"pornthip\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1-4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : normal - announcer role/owner : add a new announcment\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"const jsondata = pm.response.json() ;",
											"pm.collectionVariables.set(\"delete-id\", jsondata.id) ;",
											"",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\"\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\") ;",
											"    pm.expect(jsondata.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-10-31T06:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"announcementTitle\": \"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\"\",\n        \"announcementDescription\": \"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\",\n        \"publishDate\": \"2023-10-22T01:00:00Z\",\n        \"closeDate\": \"2023-10-31T06:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.collectionVariables.get(\"delete-id\")",
											"pm.test(\"Senario : normal - announcer role/owner : update the annoucement id \"+ id)",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsondata = pm.response.json() ;",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\" (เพิ่มเติม)\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\") ;",
											"    pm.expect(jsondata.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-10-31T06:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"pornthip\") ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"announcementTitle\": \"การบรรยาย \\\"Startup และการส่งเสริมของสำนักงานนวัตกรรมแห่่งชาติ\\\" (เพิ่มเติม)\",\n        \"announcementDescription\": \"ขอเชิญนักศึกษา และผู้สนใจเข้าร่วมฟังการบรรยาย \\\"Startup และการส่งสริมของสำนักงานนวัตกรรมแห่งชาติ\\\"\",\n        \"publishDate\": \"2023-10-22T01:00:00Z\",\n        \"closeDate\": \"2023-10-31T06:00:00Z\",\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-1-6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.collectionVariables.get(\"delete-id\")",
											"pm.test(\"Senario : Delete the announcement with id : \"+id,function(){",
											"})",
											"",
											"pm.test(\"Delete id \"+id+\" : Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var host = pm.collectionVariables.get(\"host\")",
									"",
									"/* authentication with username and password */",
									"pm.sendRequest({",
									"    url: host+'/api/token',",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({username: \"pornthip\", password: \"Sasbscit22*\"})",
									"    }",
									"},function(err,res){",
									"    pm.collectionVariables.set(\"token\",res.json().token) ;",
									"    pm.collectionVariables.set(\"refreshToken\",res.json().refreshToken) ;",
									"})",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "TC-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-2",
					"item": [
						{
							"name": "TC-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-2-1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role/not owner : view the announcement listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Announcements length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(2) ;",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"กิจกรรมพี่อ้อย พี่ฉอด On Tour 2566\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-04-18T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-05-08T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"var data = jsonData[1] ;",
											"pm.test(\"Second Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"แนวปฎิบัติการสอบออนไลน์ พ.ศ. 2565\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-01-26T23:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.be.null ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทั่วไป\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"pornthip\") ;",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-2-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role/not owner : view the annoucement id 1\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-2-3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role/not owner : update the annoucement id 1\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"announcementTitle\": \"บริษัท เน็ตเซอร์พลัส จำกัด รับสมัครงาน 2 ตำแหน่ง\",\n        \"announcementDescription\": \"บริษัท เน็ตเซอร์พลัส จำกัด เปิดรับสมัครงาน 2 ตำแหน่ง Application Support และ Customer Support\",\n        \"publishDate\": null,\n        \"closeDate\": null,\n        \"announcementDisplay\": \"Y\",\n        \"categoryId\": 2\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "C-PBI-30.1-AUTHORIZE-ANNOUNCEMENT-FUNCTIONS-ANNOUNCER-2-6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : fail - announcer role/not owner : delete the annoucement id 1\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var host = pm.collectionVariables.get(\"host\")",
									"",
									"/* authentication with username and password */",
									"pm.sendRequest({",
									"    url: host+'/api/token',",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({username: \"pornthip\", password: \"Sasbscit22*\"})",
									"    }",
									"},function(err,res){",
									"    pm.collectionVariables.set(\"token\",res.json().token) ;",
									"    pm.collectionVariables.set(\"refreshToken\",res.json().refreshToken) ;",
									"})",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "PBI-31-DELETE-USER-WITH-ASSOCIATIONS",
			"item": [
				{
					"name": "TC-PBI-31-DELETE-USER-WITH-ASSOCIATIONS-1",
					"item": [
						{
							"name": "Step 1 Login with the user 'sanit'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 1 Login with the user : sanit\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sanit\",\n    \"password\": \"Sasadmin22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 : Create a new user 'kanokwan'",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 2 Create a user : kanokwan\")",
											"pm.test(\"Create a new user : nominal data\",function(){",
											"})",
											"pm.test(\"Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json() ;",
											"",
											"pm.collectionVariables.set(\"delete-id\", data.id) ;",
											"",
											"pm.test(\"Test : Add User 'kanokwan'\",()=>{",
											"    pm.expect(data.username).to.equal(\"kanokwan\") ;",
											"    pm.expect(data.name).to.contain(\"Kanokwan\") ;",
											"    pm.expect(data.name).to.contain(\"Suwantavatoop\") ;",
											"    pm.expect(data.email).to.equal(\"kanokwan.suw@kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"announcer\") ;  ",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan\",\n    \"name\" : \"Kanokwan Suwantavatoop\",\n    \"email\" : \"kanokwan.suw@kmutt.ac.th\",\n    \"password\": \"Sasinter22*\",\n    \"role\" : \" announcer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3 Login with the user 'kanokwan'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 3 Login with the user : kanokwan\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan\",\n    \"password\": \"Sasinter22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 add announcement 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 4 : add a new announcment 1/2\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"const jsondata = pm.response.json() ;",
											"pm.collectionVariables.set(\"insert-id-1\", jsondata.id) ;",
											"",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"Scholarship for Exchange Student Project 2023\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"Announced funding for student exchanges. The board has provided funding for exchange students in fiscal 2566.\") ;",
											"    pm.expect(jsondata.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2023-11-30T11:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"kanokwan\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"announcementTitle\": \"Scholarship for Exchange Student Project 2023\",\n    \"announcementDescription\": \"Announced funding for student exchanges. The board has provided funding for exchange students in fiscal 2566.\",\n    \"publishDate\": \"2023-10-22T01:00:00Z\",\n    \"closeDate\": \"2023-11-30T11:00:00Z\",\n    \"announcementDisplay\": \"Y\",\n    \"categoryId\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 add announcement 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 4 : add a new announcment 2/2\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"const jsondata = pm.response.json() ;",
											"pm.collectionVariables.set(\"insert-id-2\", jsondata.id) ;",
											"",
											"pm.test(\"Announcement having both publish date and close date\",()=>{",
											"    pm.expect(jsondata.announcementTitle).to.equal(\"Announcement of the \\\"Enhancing Student Mobility 2024\\\" Schorlarship\") ;",
											"    pm.expect(jsondata.announcementDescription).to.equal(\"International Affairs Office (AI) in KMUTT is pleased to announce the \\\"Enhancing Student Mobility 2024\\\" Project to the eligible candidates for joining short-term/activities at our partner universities in the fiscal year 2024.\") ;",
											"    pm.expect(jsondata.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(jsondata.closeDate).to.equal(\"2024-07-31T11:00:00Z\") ;",
											"    pm.expect(jsondata.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(jsondata.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(jsondata.announcementOwner).to.equal(\"kanokwan\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"announcementTitle\": \"Announcement of the \\\"Enhancing Student Mobility 2024\\\" Schorlarship\",\n    \"announcementDescription\": \"International Affairs Office (AI) in KMUTT is pleased to announce the \\\"Enhancing Student Mobility 2024\\\" Project to the eligible candidates for joining short-term/activities at our partner universities in the fiscal year 2024.\",\n    \"publishDate\": \"2023-10-22T01:00:00Z\",\n    \"closeDate\": \"2024-07-31T11:00:00Z\",\n    \"announcementDisplay\": \"Y\",\n    \"categoryId\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5 Login with the user 'sanit'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 5 Login with the user : sanit\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sanit\",\n    \"password\": \"Sasadmin22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 6 View the announcement list page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 6 View the announcement listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Announcements length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(6) ;",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"Announcement of the \\\"Enhancing Student Mobility 2024\\\" Schorlarship\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2024-07-31T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"kanokwan\") ;",
											"})",
											"var data = jsonData[1] ;",
											"pm.test(\"Second Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"Scholarship for Exchange Student Project 2023\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-11-30T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"kanokwan\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 7 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 7 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(5) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 9 Delete the user 'kanokwan'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 9 Delete the user kanokwan\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 10 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 10 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(4) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 11 View the announcement list page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 11 View the announcement listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Announcements length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(6) ;",
											"})",
											"var data = jsonData[0] ;",
											"pm.test(\"First Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"Announcement of the \\\"Enhancing Student Mobility 2024\\\" Schorlarship\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2024-07-31T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"sanit\") ;",
											"})",
											"var data = jsonData[1] ;",
											"pm.test(\"Second Announcement test\",()=>{",
											"    pm.expect(data.announcementTitle).to.equal(\"Scholarship for Exchange Student Project 2023\") ;",
											"    pm.expect(data.publishDate).to.equal(\"2023-10-22T01:00:00Z\") ;",
											"    pm.expect(data.closeDate).to.equal(\"2023-11-30T11:00:00Z\") ;",
											"    pm.expect(data.announcementDisplay).to.equal(\"Y\") ;",
											"    pm.expect(data.announcementCategory).to.equal(\"ทุนการศึกษา\") ;",
											"    pm.expect(data.announcementOwner).to.equal(\"sanit\") ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 12 Delete  the inserted announcement 1/2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/{{insert-id-1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"{{insert-id-1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 12 Delete  the inserted announcement 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var id = pm.collectionVariables.get(\"insert-id-2\");",
											"pm.test(\"Senario : Step 12 Delete the announcement id \"+id+' (2/2)')",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/announcements/{{insert-id-2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"announcements",
										"{{insert-id-2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TC-PBI-31-DELETE-USER-WITH-ASSOCIATIONS-2",
					"item": [
						{
							"name": "Step 1 Login with the user 'sanit'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 1 Login with the user : sanit\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sanit\",\n    \"password\": \"Sasadmin22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 : Create a new user 'kanokwan.suw'",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 2 Create a user : kanokwan.suw\")",
											"pm.test(\"Create a new user : nominal data\",function(){",
											"})",
											"pm.test(\"Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json() ;",
											"",
											"pm.collectionVariables.set(\"delete-id\", data.id) ;",
											"",
											"pm.test(\"Test : Add User 'kanokwan'\",()=>{",
											"    pm.expect(data.username).to.equal(\"kanokwan.suw\") ;",
											"    pm.expect(data.name).to.contain(\"KANOKWAN\") ;",
											"    pm.expect(data.name).to.contain(\"SUWANTAVATOOP\") ;",
											"    pm.expect(data.email).to.equal(\"kanokwan@sit.kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"admin\") ;  ",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan.suw\",\n    \"name\" : \"KANOKWAN SUWANTAVATOOP\",\n    \"email\" : \"kanokwan@sit.kmutt.ac.th\",\n    \"password\": \"Sasinter22*\",\n    \"role\" : \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 3 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(5) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 Delete the user 'kanokwan.suw'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 4 Delete the user kanokwan.suw\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 5 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(4) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TC-PBI-31-DELETE-USER-WITH-ASSOCIATIONS-3",
					"item": [
						{
							"name": "Step 1 Login with the user 'sanit'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 1 Login with the user : sanit\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sanit\",\n    \"password\": \"Sasadmin22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2 : Create a new user 'kanokwan.suw'",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 2 Create a user : kanokwan.suw\")",
											"pm.test(\"Create a new user : nominal data\",function(){",
											"})",
											"pm.test(\"Status must be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json() ;",
											"",
											"pm.collectionVariables.set(\"delete-id\", data.id) ;",
											"",
											"pm.test(\"Test : Add User 'kanokwan'\",()=>{",
											"    pm.expect(data.username).to.equal(\"kanokwan.suw\") ;",
											"    pm.expect(data.name).to.contain(\"KANOKWAN\") ;",
											"    pm.expect(data.name).to.contain(\"SUWANTAVATOOP\") ;",
											"    pm.expect(data.email).to.equal(\"kanokwan@sit.kmutt.ac.th\") ;",
											"    pm.expect(data.role).to.equal(\"admin\") ;  ",
											"    pm.expect(data.createdOn).to.not.be.null ;",
											"    pm.expect(data.updatedOn).to.not.be.null ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan.suw\",\n    \"name\" : \"KANOKWAN SUWANTAVATOOP\",\n    \"email\" : \"kanokwan@sit.kmutt.ac.th\",\n    \"password\": \"Sasinter22*\",\n    \"role\" : \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3 Login with the user 'kanokwan.suw'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario: Step 3 Login with the user : kanokwan\")",
											"pm.test(\"Status must be 200\",function(){",
											"    pm.response.to.have.status(200)",
											"})",
											"",
											"var data = pm.response.json() ;",
											"pm.test(\"Reponse should have token and refreshToken fields\", function(){",
											"    pm.expect(data).to.be.an(\"object\") ;",
											"    pm.expect(data).to.have.all.keys('token','refreshToken')",
											"    pm.collectionVariables.set(\"token\",data.token) ;",
											"    pm.collectionVariables.set(\"refreshToken\",data.refreshToken) ;",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"kanokwan.suw\",\n    \"password\": \"Sasinter22*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 3 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(5) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5 Delete the user 'kanokwan.suw'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 5 Delete the user kanokwan.suw\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(403);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users/{{delete-id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users",
										"{{delete-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 6 View the user listing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Senario : Step 5 View the user listing page\")",
											"pm.test(\"Status test\",function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"const jsonData = pm.response.json() ;",
											"pm.test(\"Users length test\",()=>{",
											"    pm.expect(jsonData).to.be.an(\"array\") ;",
											"    pm.expect(jsonData.length).to.equal(5) ;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "delete-id",
			"value": "",
			"type": "string"
		},
		{
			"key": "insert-id-1",
			"value": "",
			"type": "string"
		},
		{
			"key": "insert-id-2",
			"value": "",
			"type": "string"
		}
	]
}